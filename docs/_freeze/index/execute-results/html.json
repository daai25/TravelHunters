{
  "hash": "7655390ba36f13f886df261c36758469",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"TravelHunters - Documentation\"\n---\n\n# TravelHunters Project Documentation\n\nWelcome to the TravelHunters project documentation! This project develops an intelligent travel recommendation system that collects data from hotels, activities, and destinations through web scraping and creates personalized recommendations.\n\n![The Data Science Process @DoemerKempf2022_1000150238](pics/dsprocess.png)\n\n## Project Overview\n\nTravelHunters is a Data Science project that demonstrates the entire pipeline from data acquisition to modeling and evaluation:\n\n1. **Data Acquisition**: Automated web scraping of travel data\n2. **Data Processing**: Cleaning and structuring of raw data  \n3. **Modelling**: Development of recommendation algorithms\n4. **Evaluation**: Assessment of results and deployment planning\n\n## Data Statistics\n\nHere is an overview of the data collected in the project:\n\n::: {#cell-fig-data-overview .cell execution_count=1}\n``` {.python .cell-code code-fold=\"true\"}\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport sqlite3\nimport pandas as pd\n\n# Simulated data based on the TravelHunters project\ncategories = ['Hotels\\n(Booking.com)', 'Activities\\n(GetYourGuide)', 'Destinations\\n(Various)', 'Total\\nDatasets']\ncounts = [2078, 89, 671, 2838]\ncolors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4']\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 6))\n\n# Bar chart\nbars = ax1.bar(categories, counts, color=colors, alpha=0.8)\nax1.set_ylabel('Number of Datasets')\nax1.set_title('TravelHunters - Collected Datasets', fontsize=14, fontweight='bold')\nax1.grid(axis='y', alpha=0.3)\n\n# Show values on bars\nfor bar, count in zip(bars, counts):\n    height = bar.get_height()\n    ax1.text(bar.get_x() + bar.get_width()/2., height + 10,\n             f'{count:,}', ha='center', va='bottom', fontweight='bold')\n\n# Pie chart for distribution\nsizes = [2078, 89, 671]\nlabels = ['Hotels (73.2%)', 'Activities (3.1%)', 'Destinations (23.7%)']\nexplode = (0.05, 0.05, 0.05)\n\nax2.pie(sizes, explode=explode, labels=labels, colors=colors[:3], autopct='%1.0f',\n        startangle=90, textprops={'fontsize': 10})\nax2.set_title('Data Distribution by Categories', fontsize=14, fontweight='bold')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Overview of TravelHunters Data Collection](index_files/figure-html/fig-data-overview-output-1.png){#fig-data-overview width=1383 height=563}\n:::\n:::\n\n\n## Project Structure\n\n::: {#cell-fig-project-pipeline .cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nfrom matplotlib.patches import FancyBboxPatch\n\nfig, ax = plt.subplots(1, 1, figsize=(14, 8))\n\n# Define pipeline steps\nsteps = [\n    {'name': 'Web Scraping\\n(Scrapy)', 'x': 1, 'y': 4, 'color': '#FF6B6B'},\n    {'name': 'Data Cleaning\\n& Validation', 'x': 3, 'y': 4, 'color': '#4ECDC4'}, \n    {'name': 'Database\\nIntegration', 'x': 5, 'y': 4, 'color': '#45B7D1'},\n    {'name': 'Feature\\nEngineering', 'x': 1, 'y': 2, 'color': '#96CEB4'},\n    {'name': 'Model Training\\n(ML)', 'x': 3, 'y': 2, 'color': '#F7DC6F'},\n    {'name': 'Evaluation\\n& Deployment', 'x': 5, 'y': 2, 'color': '#BB8FCE'}\n]\n\n# Boxes zeichnen\nfor step in steps:\n    box = FancyBboxPatch((step['x']-0.4, step['y']-0.3), 0.8, 0.6,\n                         boxstyle=\"round,pad=0.1\", \n                         facecolor=step['color'], alpha=0.7,\n                         edgecolor='black', linewidth=1.5)\n    ax.add_patch(box)\n    ax.text(step['x'], step['y'], step['name'], ha='center', va='center',\n            fontsize=10, fontweight='bold', color='white')\n\n# Pfeile für Workflow\narrows = [\n    (1.4, 4, 1.2, 0),    # Scraping → Cleaning\n    (3.4, 4, 1.2, 0),    # Cleaning → Database\n    (2.6, 3.7, -1.2, -1.4),  # Cleaning → Feature Eng\n    (1.4, 2, 1.2, 0),    # Feature → Model\n    (3.4, 2, 1.2, 0),    # Model → Evaluation\n]\n\nfor arrow in arrows:\n    ax.arrow(arrow[0], arrow[1], arrow[2], arrow[3], \n             head_width=0.1, head_length=0.1, fc='black', ec='black')\n\n# Datenquellen\nsources = ['Booking.com', 'GetYourGuide', 'Various Tourism Sites']\nfor i, source in enumerate(sources):\n    ax.text(1, 5.2 - i*0.3, f'• {source}', fontsize=9, style='italic')\n\nax.text(1, 5.5, 'Data Sources:', fontsize=11, fontweight='bold')\n\n# Outputs\noutputs = ['Hotels Database', 'Recommendation API', 'Analytics Dashboard']\nfor i, output in enumerate(outputs):\n    ax.text(5, 1.2 - i*0.3, f'• {output}', fontsize=9, style='italic')\n\nax.text(5, 1.5, 'Project Outputs:', fontsize=11, fontweight='bold')\n\nax.set_xlim(0, 6.5)\nax.set_ylim(0.5, 6)\nax.axis('off')\nax.set_title('TravelHunters - Data Science Workflow', fontsize=16, fontweight='bold', pad=20)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![TravelHunters Data Science Pipeline](index_files/figure-html/fig-project-pipeline-output-1.png){#fig-project-pipeline width=1334 height=759}\n:::\n:::\n\n\n## Documentation Structure\n\nThis documentation is structured according to the Data Science process:\n\n- **[Project Charter](project_charta.qmd)**: Project definition, goals and planning\n- **[Data Report](data_report.qmd)**: Detailed description of all used datasets\n- **[Modelling Report](modelling_report.qmd)**: Development and evaluation of recommendation models  \n- **[Evaluation](evaluation.qmd)**: Project evaluation and deployment decisions\n\n## Key Performance Indicators\n\n::: {#cell-fig-kpis .cell execution_count=3}\n``` {.python .cell-code code-fold=\"true\"}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# KPI data\nmetrics = ['Data Coverage', 'Model Precision', 'User Satisfaction', 'Data Quality', 'Scalability']\nvalues = [85, 78, 84, 95, 72]  # Percentage values\ntargets = [80, 70, 80, 90, 70]  # Target values\n\nx = np.arange(len(metrics))\nwidth = 0.35\n\nfig, ax = plt.subplots(figsize=(12, 6))\nbars1 = ax.bar(x - width/2, values, width, label='Current Values', color='#4ECDC4', alpha=0.8)\nbars2 = ax.bar(x + width/2, targets, width, label='Target Values', color='#FF6B6B', alpha=0.6)\n\nax.set_ylabel('Performance (%)')\nax.set_title('TravelHunters - Performance Metrics vs. Targets')\nax.set_xticks(x)\nax.set_xticklabels(metrics, rotation=45, ha='right')\nax.legend()\nax.grid(axis='y', alpha=0.3)\n\n# Show values on bars\nfor bars in [bars1, bars2]:\n    for bar in bars:\n        height = bar.get_height()\n        ax.text(bar.get_x() + bar.get_width()/2., height + 1,\n                f'{height}%', ha='center', va='bottom', fontweight='bold')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![TravelHunters - Key Performance Indicators](index_files/figure-html/fig-kpis-output-1.png){#fig-kpis width=1141 height=566}\n:::\n:::\n\n\n## Technical Stack\n\nThe project uses the following technologies:\n\n- **Web Scraping**: Scrapy Framework\n- **Data Processing**: Python, Pandas, SQLite\n- **Machine Learning**: Scikit-learn, Surprise\n- **Visualization**: Matplotlib, Plotly\n- **Documentation**: Quarto, Markdown\n\n---\n\n*For detailed information on specific aspects of the project, navigate to the corresponding sections of the documentation.*\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}